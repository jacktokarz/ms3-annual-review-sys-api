<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <sub-flow name="404RouterSubflow">
        <choice doc:name="Choice - check if payload is empty">
            <when expression="#[payload==empty]">
                <flow-ref name="404Error" doc:name="404Error"/>
            </when>
            <otherwise>
                <json:object-to-json-transformer doc:name="Object to JSON"/>
            </otherwise>
        </choice>
    </sub-flow>
    <flow name="409Error">
        <set-property propertyName="http.status" value="409" doc:name="Property - set http status"/>
        <set-payload value="{ &quot;message&quot;: &quot;Conflict - Wrong Data Appended&quot; }" doc:name="Set Payload - error message"/>
    </flow>
    <flow name="404Error">
        <set-property propertyName="http.status" value="404" doc:name="Property - set http status"/>
        <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload - error message"/>
    </flow>
    <sub-flow name="convertIntValuesToBoolean">
        <dw:transform-message doc:name="Transform Message - Convert Int values to true or false">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
%function intToBoolean(field) field > 0 unless field == null otherwise null
---
payload map {
  annual_review_id:$.annual_review_id,
  employee_id:$.employee_id,
  supervisor_id:$.supervisor_id,
  self_assessment_avg:$.self_assessment_avg,
  mgr_assessment_avg:$.mgr_assessment_avg,
  completed_dt:$.completed_dt,
  start_dt:$.start_dt,
  status:$.status,
  emp_submit_dt:$.emp_submit_dt,
  sup_submit_dt:$.sup_submit_dt,
  meeting_dt:$.meeting_dt,
  final_rating:$.final_rating,
  emp_comments:$.emp_comments,
  emp_signed:intToBoolean($.emp_signed)
}]]></dw:set-payload>
        </dw:transform-message>
    </sub-flow>
    <flow name="getAllAnnualReviews">
        <component class="com.ms3.annualReviewSysAPI.queryBuilder.WhereQueryBuilder" doc:name="Java - build where query based on query params"/>
        <db:select config-ref="Employee-MySQL-Config" doc:name="Database - GET all annual reviews">
            <db:dynamic-query><![CDATA[SELECT * FROM ANNUAL_REVIEW #[flowVars.whereClause]]]></db:dynamic-query>
        </db:select>
        <flow-ref name="convertIntValuesToBoolean" doc:name="convertIntValuesToBoolean"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <exception-strategy ref="globalChoiceExceptionStrategy" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="getAnnualReviewForId">
        <db:select config-ref="Employee-MySQL-Config" doc:name="Database - GET annual review based on ID">
            <db:parameterized-query><![CDATA[SELECT * FROM ANNUAL_REVIEW WHERE annual_review_id=#[message.inboundProperties.'http.uri.params'.annualReviewId]]]></db:parameterized-query>
        </db:select>
        <flow-ref name="convertIntValuesToBoolean" doc:name="convertIntValuesToBoolean"/>
        <flow-ref name="404RouterSubflow" doc:name="404RouterSubflow"/>
        <exception-strategy ref="globalChoiceExceptionStrategy" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="insertAnnualReview">
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <enricher source="#[payload]" target="#[variable:result]" doc:name="Message Enricher">
            <db:select config-ref="Employee-MySQL-Config" doc:name="Database - GET annual review based on employee id and start date">
                <db:parameterized-query><![CDATA[SELECT * FROM ANNUAL_REVIEW WHERE employee_id=#[payload.employee_id] AND start_dt=#[payload.start_dt]]]></db:parameterized-query>
            </db:select>
        </enricher>
        <choice doc:name="Choice - verify if there is an existing annual review record">
            <when expression="#[flowVars.result==empty]">
                <db:insert config-ref="Employee-MySQL-Config" autoGeneratedKeys="true" autoGeneratedKeysColumnNames="annual_review_id" doc:name="Database - INSERT an annual review record">
                    <db:parameterized-query><![CDATA[INSERT INTO ANNUAL_REVIEW (supervisor_id,employee_id,self_assessment_avg,mgr_assessment_avg,completed_dt,status,start_dt) VALUES (#[payload.supervisor_id],#[payload.employee_id],#[payload.self_assessment_avg], #[payload.mgr_assessment_avg],IF(((#[payload.completed_dt] is null) or (#[payload.completed_dt]='')), NULL,#[payload.completed_dt]),#[payload.status],#[payload.start_dt])]]></db:parameterized-query>
                </db:insert>
                <set-variable variableName="annualReviewID" value="#[payload[0].GENERATED_KEY]" doc:name="newly created annual review ID"/>
                <set-property value="http://${http.host}:${http.port}/api/system/annualReviews/#[flowVars.annualReviewID]" propertyName="location" doc:name="Set Location header" />
                <set-payload value="{&quot;message&quot;:&quot;Annual Review created Successfully&quot;}" doc:name="Set Payload - success message"/>
            </when>
            <otherwise>
                <flow-ref name="409Error" doc:name="409Error"/>
            </otherwise>
        </choice>
        <exception-strategy ref="globalChoiceExceptionStrategy" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="updateAnnualReviewForId">
        <json:json-to-object-transformer returnClass="java.util.Map" doc:name="JSON to Object"/>
        <component class="com.ms3.annualReviewSysAPI.queryBuilder.UpdateQueryBuilder" doc:name="Java - Build an update query based on uri params and payload"/>
        <db:update config-ref="Employee-MySQL-Config" doc:name="Database - Update annual review for ID">
            <db:dynamic-query><![CDATA[#[flowVars.updateQuery]]]></db:dynamic-query>
        </db:update>
        <choice doc:name="Choice - verify if update is success">
            <when expression="#[payload==0]">
                <flow-ref name="404Error" doc:name="404Error"/>
            </when>
            <otherwise>
                <set-payload value="{ &quot;message&quot;: &quot;Annual Review updated successfully&quot; }" doc:name="Set Payload - success message"/>
            </otherwise>
        </choice>
        <exception-strategy ref="globalChoiceExceptionStrategy" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="deleteAnnualReviewWithId">
        <db:delete config-ref="Employee-MySQL-Config" doc:name="Database - Delete annual review record for ID">
            <db:parameterized-query><![CDATA[DELETE FROM ANNUAL_REVIEW WHERE annual_review_id=(#[message.inboundProperties.'http.uri.params'.annualReviewId])]]></db:parameterized-query>
        </db:delete>
        <choice doc:name="Choice">
            <when expression="#[payload==0]">
                <flow-ref name="404Error" doc:name="404Error"/>
            </when>
            <otherwise>
                <set-payload value="{ &quot;message&quot;: &quot;Annual Review deleted successfully&quot; }" doc:name="Set Payload"/>
            </otherwise>
        </choice>
    </flow>
</mule>
